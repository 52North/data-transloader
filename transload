#!/usr/bin/env ruby -w -Ilib
require 'pry'
require 'transloader'

def get_station_metadata(source, station_id, cache)
  case source
  when "environment_canada"
    provider = Transloader::EnvironmentCanadaProvider.new(cache)
    station = provider.get_station(station_id)
    station.download_metadata
    station.save_metadata
  else
    puts "Support for source not implemented"
  end
end

def get_station_observations(source, station_id, cache)
  case source
  when "environment_canada"
    provider = Transloader::EnvironmentCanadaProvider.new(cache)
    station = provider.get_station(station_id)
    station.save_observations
  else
    puts "Support for source not implemented"
  end
end

def put_station_metadata(source, station_id, cache, destination)
  case source
  when "environment_canada"
    provider = Transloader::EnvironmentCanadaProvider.new(cache)
    station = provider.get_station(station_id)
    station.get_metadata
    station.put_metadata(destination)
  else
    puts "Support for source not implemented"
  end
end

# Parse Args
args = Transloader::Args.new(ARGV)

# Determine action

case args.verb
when :get
  case args.object
  when :metadata
    get_station_metadata(args.source, args.station, args.cache)
  when :observations
    get_station_observations(args.source, args.station, args.cache)
  end
when :put
  case args.object
  when :metadata
    put_station_metadata(args.source, args.station, args.cache, args.destination)
  when :observations
    puts "Not yet implemented"
  end
end
